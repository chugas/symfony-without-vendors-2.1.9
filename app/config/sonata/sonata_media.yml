#
# more information can be found here http://sonata-project.org/bundles/media
#
sonata_media:
    buzz:
        connector:  sonata.media.buzz.connector.curl  
    db_driver:       doctrine_orm # | doctrine_mongodb
    default_context: default
    contexts:
        default:  # the default context is mandatory
            download:
                mode: http # X-Sendfile | http
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo
            formats: []

        eventos_image:
            providers:
                - sonata.media.provider.image
            formats: []

        eventos_video:
            providers:
                - sonata.media.provider.youtube
            formats:
                youtube: { width: 672, quality: 100 }
                
        users:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.soundcloud
                - sonata.media.provider.youtube
            formats: []

    cdn:
        # define the public base url for the uploaded media
        server:
            path:      %sonata_media.cdn.host%

    filesystem:
        # define where the uploaded file will be stored
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true

    providers:
        file:
            resizer:    false

    pixlr:
        enabled:  true
        referrer: Demo - Sonata Project

    resizer:
        simple:
#            mode:  outbound
            mode:  inset
            
    class:
        media: Application\Success\MediaBundle\Entity\Media
        gallery: Application\Success\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Success\MediaBundle\Entity\GalleryHasMedia

#
# The LiipImagineBundle can be used if you want to convert on demand an image
# to a specific format. (ie a controller render the file)
#    more information can be found here : https://github.com/liip/LiipImagineBundle
#
#liip_imagine:
#    filter_sets:
#        default_small:
#            quality: 75
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
#            filters:
#                thumbnail: { size: [100, 70], mode: outbound }
#
#
#        default_big:
#            quality: 75
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
#            filters:
#                thumbnail: { size: [500, 70], mode: outbound }

# Enable Doctrine to map the provided entities
doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    SuccessMediaBundle: ~
                    SonataMediaBundle: ~