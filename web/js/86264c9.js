(function(c,d,b){var a={post:function(g,i,k,f,e){var j=function(l){if("undefined"!==typeof f){f(l.responseText,l.status)}};var h=function(l){if("undefined"!==typeof e){e(l.responseText,l.status)}};d.post(g,i,k).error(j).complete(h)},get:function(f,g,i,e){var h=function(j){if("undefined"!==typeof e){e(j.responseText,j.status)}};d.get(f,g,i).error(h)},getThreadComments:function(e,g){var f=jQuery.Event("fos_comment_before_load_thread");f.identifier=e;f.params={permalink:encodeURIComponent(g||c.location.href)};a.thread_container.trigger(f);a.get(a.base_url+"/"+encodeURIComponent(f.identifier)+"/comments",f.params,function(h){a.thread_container.html(h);a.thread_container.attr("data-thread",f.identifier);a.thread_container.trigger("fos_comment_load_thread",f.identifier);setup_rich_textarea()})},initializeListeners:function(){a.thread_container.on("submit","form.fos_comment_comment_new_form",function(i){var h=d(this);var f=a.serializeObject(this);i.preventDefault();var g=d.Event("fos_comment_submitting_form");h.trigger(g);if(g.isDefaultPrevented()){return}a.post(this.action,f,function(j,e){a.appendComment(j,h);h.trigger("fos_comment_new_comment",j)},function(k,j){var e=h.parent();e.after(k);e.remove()},function(j,e){h.trigger("fos_comment_submitted_form",e)})});a.thread_container.on("click",".fos_comment_comment_reply_show_form",function(g){var h=d(this).data();var f=d(this);if(f.closest(".fos_comment_comment_reply").hasClass("fos_comment_replying")){return f}a.get(h.url,{parentId:h.parentId},function(e){f.closest(".fos_comment_comment_reply").addClass("fos_comment_replying");f.after(e);f.trigger("fos_comment_show_form",e)})});a.thread_container.on("click",".fos_comment_comment_reply_cancel",function(h){var f=d(this).closest(".fos_comment_comment_form_holder");var g=d.Event("fos_comment_cancel_form");f.trigger(g);if(g.isDefaultPrevented()){return}f.closest(".fos_comment_comment_reply").removeClass("fos_comment_replying");f.remove()});a.thread_container.on("click",".fos_comment_comment_edit_show_form",function(g){var h=d(this).data();var f=d(this);a.get(h.url,{},function(e){var i=d(h.container);i.data("original",i.html());i.html(e);f.trigger("fos_comment_show_edit_form",e)})});a.thread_container.on("submit","form.fos_comment_comment_edit_form",function(g){var f=d(this);a.post(this.action,a.serializeObject(this),function(e){a.editComment(e);f.trigger("fos_comment_edit_comment",e)},function(i,h){var e=f.parent();e.after(i);e.remove()});g.preventDefault()});a.thread_container.on("click",".fos_comment_comment_edit_cancel",function(f){a.cancelEditComment(d(this).parents(".fos_comment_comment_body"))});a.thread_container.on("click",".fos_comment_comment_vote",function(g){var f=d(this);var h=f.data();a.get(h.url,{},function(i){var e=d(d.trim(i)).children("form")[0];var j=d(e).data();a.post(e.action,a.serializeObject(e),function(k){d("#"+j.scoreHolder).html(k);f.trigger("fos_comment_vote_comment",k,e)})})});a.thread_container.on("click",".fos_comment_comment_remove",function(g){var h=d(this).data();var f=d.Event("fos_comment_removing_comment");d(this).trigger(f);if(f.isDefaultPrevented()){return}a.get(h.url,{},function(i){var e=d(d.trim(i)).children("form")[0];a.post(e.action,a.serializeObject(e),function(l){var j=d(d.trim(l));var k=d("#"+j.attr("id"));k.replaceWith(j)})})});a.thread_container.on("click",".fos_comment_thread_commentable_action",function(f){var g=d(this).data();a.get(g.url,{},function(h){var e=d(d.trim(h)).children("form")[0];a.post(e.action,a.serializeObject(e),function(j){var i=d(d.trim(j)).children("form")[0];var k=d(i).data().fosCommentThreadId;a.getThreadComments(k)})})})},appendComment:function(g,h){var j=h.data();if(""!=j.parent){var f=h.closest(".fos_comment_comment_form_holder");var i=h.closest(".fos_comment_comment_reply");var e=h.closest(".fos_comment_comment_show").children(".fos_comment_comment_replies");i.removeClass("fos_comment_replying");e.prepend(g);e.trigger("fos_comment_add_comment",g);f.remove()}else{h.after(g);h.trigger("fos_comment_add_comment",g);h=d(h[0]);h[0].reset();h.children(".fos_comment_form_errors").remove()}},editComment:function(e){var e=d(d.trim(e));var f=d("#"+e.attr("id")).children(".fos_comment_comment_body");f.html(e.children(".fos_comment_comment_body").html())},cancelEditComment:function(e){e.html(e.data("original"))},serializeObject:function(f){var g={};var e=d(f).serializeArray();d.each(e,function(){if(g[this.name]!==undefined){if(!g[this.name].push){g[this.name]=[g[this.name]]}g[this.name].push(this.value||"")}else{g[this.name]=this.value||""}});return g},loadCommentCounts:function(){var e=[];var f=d("span.fos-comment-count");f.each(function(g,h){var j=d(h).data("fosCommentThreadId");if(j){e.push(j)}});a.get(a.base_url+".json",{ids:e},function(j){if(typeof j!="object"){j=jQuery.parseJSON(j)}var h={};for(var g in j.threads){h[j.threads[g].id]=j.threads[g]}d.each(f,function(){var i=d(this).data("fosCommentThreadId");if(i){a.setCommentCount(this,h[i])}})})},setCommentCount:function(f,e){if(e==undefined){f.innerHTML="0";return}f.innerHTML=e.num_comments}};a.thread_container=c.fos_comment_thread_container||d("#fos_comment_thread");if(typeof c.fos_comment_remote_cors_url!="undefined"){a.easyXDM=b.noConflict("FOS_COMMENT");a.request=function(k,f,h,j,e){var g=function(l){if("undefined"!==typeof j){j(l.data,l.status)}};var i=function(l){if("undefined"!==typeof e){e(l.data.data,l.data.status)}};a.xhr.request({url:f,method:k,data:h},g,i)};a.post=function(f,g,h,e){this.request("POST",f,g,h,e)};a.get=function(f,g,i,e){var h=jQuery.param(g);f+=""!=h?"?"+h:"";this.request("GET",f,undefined,i,e)};a.xhr=new a.easyXDM.Rpc({remote:c.fos_comment_remote_cors_url},{remote:{request:{}}})}a.base_url=c.fos_comment_thread_api_base_url;if(typeof c.fos_comment_thread_id!="undefined"){a.getThreadComments(c.fos_comment_thread_id)}if(typeof c.fos_comment_thread_comment_count_callback!="undefined"){a.setCommentCount=c.fos_comment_thread_comment_count_callback}if(d("span.fos-comment-count").length>0){a.loadCommentCounts()}a.initializeListeners();c.fos=c.fos||{};c.fos.Comment=a})(window,window.jQuery,window.easyXDM);
(function(c){var b=c.ui.autocomplete.prototype,d=b._initSource;function a(g,e){var f=new RegExp(c.ui.autocomplete.escapeRegex(e),"i");return c.grep(g,function(h){return f.test(c("<div>").html(h.label||h.value||h).text())})}c.extend(b,{_initSource:function(){if(this.options.html&&c.isArray(this.options.source)){this.source=function(f,e){e(a(this.options.source,f.term))}}else{d.call(this)}},_renderItem:function(e,f){return c("<li></li>").data("item.autocomplete",f).append(c("<a></a>")[this.options.html?"html":"text"](f.label)).appendTo(e)}})})(jQuery);
if(typeof(ddt)=="undefined"){var ddt={on:function(){},off:function(){},log:function(){},warn:function(){},error:function(){}}}(function(b){var c=document;var a=document;b.widget("ui.rich_textarea",{options:{triggers:[],regexes:[]},_create:function(){var d=this;this.current_trigger=false;this.currentRange=false;this.selectionEntered=false;this.do_regex=true;this.autocomplete_open=false;this._on({keyup:function(e){this._onKeyUp(e)},keypress:function(e){this._onKeyPress(e)},keydown:function(e){this._onKeyDown(e)},mouseup:function(e){this._onMouseUp(e)},focus:function(e){this._onFocus(e)},paste:function(e){this._onPaste(e)},prepaste:function(e){this._onPrePaste(e)},postpaste:function(e){this._onPostPaste(e)}});this.element.autocomplete({html:"html",blur:function(e,f){ddt.log("autocompete blur event")},open:function(e,f){ddt.log("autocomplete open: event");d.autocomplete_open=true},close:function(e,f){ddt.log("autocomplete close: event");d.autocomplete_open=false;d.do_regex=true},change:function(e,f){ddt.log("autocomplete change event")},source:function(g,e){ddt.log("source(): got source event");var f=d._checkForTrigger();if((f==false)||(f==null)){ddt.log("source(): no trigger");return}ddt.log("source(): got source event with trigger ",f);if((f!=false)&&(f.word.length>=2)){ddt.log("source(): invoking response");f.callback(f.word,e)}},focus:function(e,f){ddt.log("focus(): autocomplete got focus event",f);e.preventDefault();return false},select:function(e,f){ddt.log("select(): got select event ",e," and ui element ",f," current range is ",this.currentRange);d._insertSelection(d.current_trigger,f.item.value);d._highlightObject();e.preventDefault();d.do_regex=false}})},_onKeyDown:function(h){ddt.log("_onKeyDown(): with key '"+h.keyCode+"' event: ",h);var g=null;var e=null;var i=null;if(this.autocomplete_open){if((h.which==b.ui.keyCode.UP)||(h.which==b.ui.keyCode.DOWN)||(h.which==b.ui.keyCode.ENTER)){h.preventDefault();return true}}i=c.getSelection();if(i.rangeCount){var f=c.getSelection().getRangeAt(0);if(f.collapsed==false){ddt.log("_onKeyDown(): multi-char range. skipping onKeyDown processing");return}}switch(h.which){case 0:ddt.error("_onKeyDown(): WEBKIT BUG: Keycode 0 returned. probably delete on Linux keypad but can't be sure");break;case b.ui.keyCode.BACKSPACE:ddt.log("_onKeyDown(): BACKSPACE pressed");var d=false;if((d=this._backspaceZeroSpace())=="stop"){ddt.log("_onKeyDown(): BACKSPACE: stop word encountered. stopping");return}ddt.log("_onKeyDown(): BACKSPACE: checking to see if we are next to an object");if(g=this._checkForAdjacentObject("left")){ddt.log("_onKeyDown(): backspacing over an object :",g);this.deleteObject(g.dom_node);if(g.preventDefault){h.preventDefault()}}ddt.log("_onKeyDown(): BACKSPACE: done");break;case b.ui.keyCode.DELETE:ddt.log("_onKeyDown(): DELETE pressed");var d=false;if((d=this._deleteZeroSpace())=="stop"){ddt.log("_onKeyDown(): DELETEE: stop word encountered. stopping");return}ddt.log("_onKeyDown(): DELETE: checking to see if we are next to an object");if(g=this._checkForAdjacentObject("right")){ddt.log("_onKeyDown(): DELETE: deleting an object :",g);this.deleteObject(g.dom_node);h.preventDefault()}ddt.log("_onKeyDown(): DELETE done");break;case b.ui.keyCode.LEFT:ddt.log("_onKeyDown(): LEFT pressed");var j=this._getCaretPosition();ddt.log("_onKeyDown(): _getCaretPosition() returned node '"+j.dom_node+"' with offset '"+j.offset+"'");if(g=this._isEmbeddedObject(j.dom_node)){ddt.log("_onKeyDown(): setting caret before object: ",g);this._setCaretPositionRelative(g.previousSibling,"end");h.preventDefault();break}if(e=this._moveCaret(j.dom_node,j.offset,"left")){ddt.log("_onKeyDown(): LEFT: _moveCaret returned:",e);if((e.checkForObjects)&&(g=this._checkForAdjacentObject("left"))){ddt.log("_onKeyDown(): LEFT: jumping over object to the left");this._setCaretPositionRelative(g.dom_node.previousSibling,"end");h.preventDefault()}if(e.preventDefault){ddt.log("_onKeyDown(): Leaving a container, etc. preventing default");h.preventDefault()}}ddt.log("_onKeyDown(): LEFT done");break;case b.ui.keyCode.RIGHT:ddt.log("_onKeyDown(): RIGHT pressed");var j=this._getCaretPosition();ddt.log("_onKeyDown(): _getCaretPosition() returned node '"+j.dom_node+"' with offset '"+j.offset+"'");if(g=this._isEmbeddedObject(j.dom_node)){ddt.log("_onKeyDown(): isEmbedded true. moving to beginning of nextSibling");this._setCaretPositionRelative(g.nextSibling,"beginning");break}if(e=this._moveCaret(j.dom_node,j.offset,"right")){ddt.log("_onKeyDown(): RIGHT: after skipping over zero space. checking for adjacent objects :",e);if((e.checkForObjects)&&(g=this._checkForAdjacentObject("right"))){ddt.log("_onKeyDown(): RIGHT: right arrowing over an object");this._setCaretPositionRelative(g.dom_node.nextSibling,"beginning")}if(e.preventDefault){ddt.log("_onKeyDown(): entering or leaving a container. preventing default");h.preventDefault()}}ddt.log("_onKeyDown(): RIGHT done.");break;case b.ui.keyCode.ENTER:this._handleEnter(h);return false;break}},_onKeyPress:function(d){ddt.log("_onKeyPress(): with key '"+d.keyCode+"' event: ",d);if(this.autocomplete_open){if((d.which==b.ui.keyCode.UP)||(d.which==b.ui.keyCode.DOWN)||(d.which==b.ui.keyCode.ENTER)){d.preventDefault();return true}}switch(d.which){case b.ui.keyCode.SPACE:ddt.log("_onKeyDown(): SPACE pressed. Checking regexes");this._checkRegexes(d);break;case b.ui.keyCode.ENTER:ddt.log("_onKeyDown(): ENTER pressed. Checking regexes");this._checkRegexes(d);break}},_onKeyUp:function(e){var f=null;ddt.log("_onKeyUp(): with key '"+e.which+"':",e);if(this.autocomplete_open){if((e.which==b.ui.keyCode.UP)||(e.which==b.ui.keyCode.DOWN)||(e.which==b.ui.keyCode.ENTER)){e.preventDefault();return true}}if(this._handleRangeSelection()){return}this._saveRange();this._highlightObject();switch(e.which){case b.ui.keyCode.ENTER:ddt.log("_onKeyUp(): ENTER: pressed. Closing autocomplete menu.");this.element.autocomplete("close");this.current_trigger=false;if(this.selectionEntered){this.selectionEntered=false;break}this._onEnterFixUp(e);ddt.log("_onKeyUp(): ENTER. done.");break;case b.ui.keyCode.SPACE:case b.ui.keyCode.TAB:case b.ui.keyCode.HOME:case b.ui.keyCode.END:this.element.autocomplete("close");this.current_trigger=false;ddt.log("_onKeyUp(): closed autocomplete menu");break;case b.ui.keyCode.LEFT:case b.ui.keyCode.RIGHT:case b.ui.keyCode.BACKSPACE:ddt.log("_onKeyUp(): arrow/backspace pressed");f=this._getCaretPosition();var d=this._clickedOnObject(f.dom_node);if(d!=false){ddt.log("_onKeyUp(): currently in an object. moving caret before object");this._setCaretPositionRelative(d,"before");return}if(!this._checkForTrigger()){ddt.log("_onKeyUp(): outside of trigger");this.element.autocomplete("close");this.current_trigger=false}else{ddt.log("_onKeyUp(): in trigger");this.element.autocomplete("search","test")}break;case b.ui.keyCode.UP:case b.ui.keyCode.DOWN:f=this._getCaretPosition();var d=this._clickedOnObject(f.dom_node);if(d!=false){this._setCaretPositionRelative(d,"before")}break}},_onMouseUp:function(f){var e;this.element.autocomplete("close");if(!b("#"+this.element.attr("id")).is(":focus")){ddt.log("_onMouseUp(): the div does not have focus");return true}if(this._handleRangeSelection()){return}this._saveRange();ddt.log("_onMouseUp(): did we click on an object?:",f.target);var d=this._clickedOnObject(f.target);if(d!=false){ddt.log("_onMouseUp(): preventing default action");this._setCaretPositionRelative(d,"before");f.preventDefault()}this._highlightObject();if(e=this._checkForTrigger()){ddt.log("_onMouseUp(): calling autocomplete from onMouseUp handler with term '"+e.word+"'");this.element.autocomplete("search","test")}},_onFocus:function(d){ddt.log("focus(): top");if(this.autocomplete_open){ddt.log("_onFocus(): autocomplete menu is open");d.preventDefault();return false}},_onPaste:function(e){ddt.log("_onPaste(): got paste event ",e);this._onPrePaste(e);var d=this;setTimeout(function(){d._onPostPaste(e)},75);return true},_onPrePaste:function(d){ddt.log("_onPrePaste(): top");b(this.element).find("*").each(function(){b(this).data("uid","123")})},_onPostPaste:function(d){ddt.log("_onPostPaste() top");var e=this;this.element.find("*").each(function(){if(!b(this).data("uid")){ddt.log("Found a new element '"+b(this).get(0).tagName+"' of type",b(this).get(0).nodeType);if((b(this).get(0).nodeType!=3)&&(b(this).get(0).nodeName!="A")){b(this).replaceWith(b(this).text())}}});this._checkRegexes(d)},_onEnterFixUp:function(e){var f=this._getCaretPosition();ddt.log("_onEnterFixUp(): current DOM Node is:",f.dom_node);if(f.dom_node.previousSibling==null){ddt.log("_onEnterFixUp(): previous sibling is NULL. Likely a WebKit browser.");this._checkSibling(f.dom_node.parentNode,"prev")}else{if(f.dom_node.previousSibling.nodeType!=3){ddt.log("_onEnterFixUp(): Previous sibling is NOT a text node");this._insertEmptyNode(f.dom_node.previousSibling,"before");this._insertEmptyNode(f.dom_node.previousSibling,"after")}}if(b(f.dom_node).filter("[_moz_dirty]").length!=0){ddt.log("_onEnterFixUp(): mozilla BR. wrapping in textnodes");this._insertEmptyNode(f.dom_node,"before");this._insertEmptyNode(f.dom_node,"after")}else{if(f.dom_node.nodeName=="BR"){ddt.log("_onEnterFixUp(): webkit BR.")}else{if(this._isEmbeddedObject(f.dom_node)){var d=this._insertEmptyNode(f.dom_node,"before");this._selectTextNode(d,0)}else{if((f.dom_node.nodeName=="DIV")||(f.dom_node.nodeName=="SPAN")||(f.dom_node.nodeName=="P")){if(f.dom_node.childNodes.length==0){ddt.log("_onEnterFixUp(): adding zero width space to empty container (div/p)");this._insertEmptyNode(f.dom_node,"child")}else{if(f.dom_node.childNodes[0].nodeType!=3){ddt.log("_onEnterFixUp(): first child of container is a '"+f.dom_node.childNodes[0].nodeName+"'");this._insertEmptyNode(f.dom_node.childNodes[0],"before");this._insertEmptyNode(f.dom_node.childNodes[0],"after")}}}}}}if(b(".scrollto").length){ddt.log("calling scrollTo");b("#"+this.element.attr("id")).scrollTo(b(".scrollto"),20);b(".scrollto").remove()}},_handleEnter:function(d){ddt.log("top of handleEnter()");d.preventDefault();var f=c.getSelection();var h=this.currentRange;ddt.log("got range and selection",h);f.removeAllRanges();if(!h){var k=b("<br>");ddt.log("_handleEnter(): adding br to id = '"+this.element.attr("id")+"'");var g=b("#"+this.element.attr("id"));b(k).appendTo(g);var l=this._insertEmptyNode(k.get(0),"before",true);var l=this._insertEmptyNode(k.get(0),"after",true);h=rangy.createRange();f=rangy.getSelection();h.setStart(l,0);h.setEnd(l,0);h.collapse(false);f.removeAllRanges();f.addRange(h);f.refresh();ddt.log("_handleEnter(): range is ",h);this.focus();return false}f.addRange(h);var g=b("<br>");var j=g.get(0);h.insertNode(g.get(0));h.setStartAfter(g.get(0));h.setEndAfter(g.get(0));h.collapse(false);f.removeAllRanges();f.addRange(h);ddt.log("handleEnter(): previousSibling is : ",j.previousSibling);ddt.log("handleEnter(): inserting zero width node before selection");var l=this._insertEmptyNode(j,"before",true);ddt.log("handleEnter(): inserting zero width node after selection");var i=this._insertEmptyNode(j,"after",true);this._selectTextNode(i,1);var e=b('<span class="scrollto"></span>');e.insertAfter(g);return false},_handleRangeSelection:function(){var h=c.getSelection();try{var e=h.getRangeAt(0)}catch(g){ddt.log("getRangeAt() failed - no range?");return false}var f=null;var d=null;ddt.log("_handleRangeSelection(): checking range for mult-char selection: ",e);if(e.collapsed==false){ddt.log("_handleRangeSelection(): we have a multi-character selection");if((f=this._clickedOnObject(e.startContainer))!=false){ddt.log("_handleRangeSelection(): range starts in an object.");e.setStartBefore(f)}if((d=this._clickedOnObject(e.endContainer))!=false){ddt.log("_handleRangeSelection(): range ends in an object.");e.setEndAfter(d)}if((f!=false)||(d!=false)){ddt.log("_handleRangeSelection(): modifying range :",e);h.removeAllRanges();h.addRange(e)}return true}return false},_saveRange:function(d){ddt.log("_saveRange(): before save currentRange: ",this.currentRange);if(typeof(d)=="undefined"){try{ddt.log("_saveRange(): current selection is",c.getSelection());var d=c.getSelection().getRangeAt(0)}catch(e){ddt.log("_saveRange(): no range? caught exception:"+e);return false}}this.currentRange=d.cloneRange();ddt.log("_saveRange(): saving currentRange: ",this.currentRange)},_checkForTrigger:function(){var e=null;var d=null;e=this._getCaretPosition();if((!e)||(e.offset==-1)){ddt.log("_checkForTrigger(): we are not inside a text node. No trigger");return false}ddt.log("_checkForTrigger(): current caret position is "+e.offset);d=this._isTrigger(e.dom_node,e.offset-1);this.current_trigger=d;return d},_checkRegexes:function(e){var g=null;var f=null;ddt.log("_checkRegexes(): with event: ",e);g=this._getCaretPosition();if(g.offset==-1){ddt.log("_checkRegexes(): we are not inside a text node. No word");return false}ddt.log("_checkRegexes(): current caret position is "+g.offset+" value is '"+g.dom_node.nodeValue.charAt(g.offset-1)+"'");if(e.type=="keyup"){if(g.offset<3){return}g.offset--}if(f=this._getWord(g.dom_node,g.offset-1)){ddt.log("_checkRegexes(): found word '"+f.word+"'");for(var d=0;d<this.options.regexes.length;d++){ddt.log("_checkRegexes(): checking against '"+this.options.regexes[d].regex);if(f.word.match(this.options.regexes[d].regex)){ddt.log("_checkRegexes(): found match at offset '"+d+"'");this.options.regexes[d].callback(f)}}}},_isTrigger:function(f,d){var g="looking_for_trigger";var e=null;var i=200;var h={};while(true){i--;if(i<=0){ddt.error("_isTrigger(): runaway loop. braking");return false}if(d==-1){ddt.log("_isTrigger(): top of loop, caret_position is '"+d+"' previousSibling is:",f.previousSibling);if(f.previousSibling==null){ddt.log("_isTrigger(): beginning of container found.");if(g=="looking_for_trigger"){ddt.log("_isTrigger(): not a trigger");return false}break}if(f.previousSibling.nodeType!=3){ddt.log("_isTrigger(): previousSibling is NOT a text node.");if(g=="looking_for_trigger"){ddt.log("_isTrigger(): not a trigger");return false}break}f=f.previousSibling;d=f.nodeValue.length-1;ddt.log("_isTrigger(): moving to previousSibling length '"+d+"'");if(d==-1){ddt.log("_isTrigger(): zero length textnode encountered");continue}}if(f.nodeValue.charAt(d)=="\u200B"){ddt.log("_isTrigger(): skipping zero width space character");d--;continue}ddt.log("_isTrigger(): Not a zero width space. Is it a space character?");if(!f.nodeValue.charAt(d).match(/\s+/)){if(g=="looking_for_trigger"){ddt.log("_isTrigger(): checking '"+f.nodeValue.charAt(d)+"' for trigger char");if(e=this._isTriggerChar(f.nodeValue.charAt(d))){ddt.log("_isTrigger(): found trigger char '"+f.nodeValue.charAt(d)+"' at caret_position '"+d+"'");g="looking_for_space";h.dom_node=f;h.offset=d;d--;continue}ddt.log("_isTrigger(): '"+f.nodeValue.charAt(d)+"' not a trigger char.");d--}else{ddt.log("_isTrigger(): character before trigger is not a space");e=null;return false}}else{if(g=="looking_for_trigger"){ddt.log("_isTrigger(): found a space instead of a trigger char");return false}ddt.log("_isTrigger(): found a space. This is the start of a trigger");break}}ddt.log("_isTriggerStart(): found a trigger.");e.startOffset=h.offset+1;e.startNode=h.dom_node;e=this._getWordEnd(e);e.startOffset=h.offset;this.current_trigger=e;return e},_getWordEnd:function(g){var h=200;var f="";ddt.log("_getWordEnd(): top with word_entry :",g);var e=g.startNode;var d=g.startOffset;g.word="";ddt.log("_getWordEnd(): at start of trigger word with caret_position '"+d+"' and char '"+e.nodeValue.charAt(d)+"' length '"+e.nodeValue.length+"'");while(true){if(h--<=0){ddt.error("_getWordEnd(): runaway loop");return false}ddt.log("_getWordEnd(): Top of loop '"+d+"'");if(d>=e.nodeValue.length){if(e.nextSibling==null){ddt.log("_getWordEnd(): returning '"+f+"'");g.endNode=e;g.endOffset=d-1;g.word=f;return g}if(e.nextSibling.nodeType!=3){ddt.log("_getWordEnd(): nextSibling is NOT a text node. Returning '"+f+"'");g.endNode=e;g.endOffset=d-1;g.word=f;return g}ddt.log("_getWordEnd(): moving to next sibling of type '"+e.nextSibling.nodeType+"' with length '"+e.nextSibling.nodeValue.length+"' and value '"+e.nextSibling.nodeValue+"'");e=e.nextSibling;d=0;if(e.nodeValue.length==0){ddt.log("_getWordEnd(): empty text node found.");continue}}if(e.nodeValue.charAt(d)=="\u200B"){ddt.log("_getWordEnd(): skipping zero width space character");d++;continue}if(!e.nodeValue.charAt(d).match(/\s+/)){ddt.log("_getWordEnd(): non-space, adding to string position '"+d+"' char '"+e.nodeValue.charAt(d)+"' node of length '"+e.nodeValue.length+"':",e);f+=e.nodeValue.charAt(d);d++}else{ddt.log("_getWordEnd(): found a space. Returning '"+f+"'");g.endNode=e;g.endOffset=d-1;g.word=f;return g}}},_isTriggerChar:function(d){for(var e in this.options.triggers){if(d==this.options.triggers[e].trigger){return this.options.triggers[e]}}return false},_getWord:function(f,d){var h=200;var e={};var g=false;while(true){h--;if(h<=0){ddt.error("_getWord(): runaway loop. braking");return false}if(d==-1){ddt.log("_getWord(): top of loop, caret_position is '"+d+"' previousSibling is:",f.previousSibling);if(f.previousSibling==null){ddt.log("_getWord(): beginning of container found.");break}if(f.previousSibling.nodeType!=3){ddt.log("_getWord(): previousSibling is NOT a text node.");break}f=f.previousSibling;d=f.nodeValue.length-1;ddt.log("_getWord(): moving to previousSibling length '"+d+"'");if(d==-1){ddt.log("_getWord(): zero length textnode encountered");continue}}if(f.nodeValue.charAt(d)=="\u200B"){ddt.log("_getWord(): skipping zero width space character");d--;continue}ddt.log("_getWord(): Not a zero width space. Is it a space character?");if(f.nodeValue.charAt(d).match(/\s+/)){ddt.log("_getWord(): found a space. This is the start of a word");break}else{g=true}ddt.log("_getWord(): '"+f.nodeValue.charAt(d)+"' not a space.");d--}e.startNode=f;e.startOffset=d+1;if(!g){ddt.log("_getWord(): only found whitespace");return false}ddt.log("_getWord(): found a the beginning of a word, now searching for the end.");e=this._getWordEnd(e);return e},_checkForAdjacentObject:function(g){var d={};var f=null;var e=null;if(!(d=this._getCaretPosition())){return false}f=d.dom_node;ddt.log("_checkForAdjacentObject(): looking in direction '"+g+"' current node is :",f);if(this._isEmbeddedObject(f)){ddt.log("_checkForAdjacentObject(): current node is an object. returning");return{dom_node:f,container_spanned:false,preventDefault:true}}if((d=this._treeWalker(d.dom_node,d.offset,g))==false){ddt.log("_checkForAdjacentObject(): none found");return false}ddt.log("_checkForAdjacentObject(): _treeWalker returned: ",d);if(b(f).filter("[_moz_dirty]").length!=0){if(g=="left"){if((d=this._treeWalker(d.dom_node.previousSibling,d.offset,g))==false){ddt.log("_checkForAdjacentObject(): none found");return false}}else{ddt.log("_checkForAdjacentObject(): current node is a moz_dirty filthy BR. don't look right.");return false}}if(d.dom_node.nodeType==3){ddt.log("_checkForAdjacentObject(): _treeWalker returned a text node with offset '"+d.offset+"'");if((g=="left")&&(d.offset==0)){if(this._isEmbeddedObject(d.dom_node.previousSibling)){return{dom_node:d.dom_node.previousSibling,container_spanned:!d.checkForObjects,preventDefault:d.preventDefault}}}else{if((g=="right")&&(d.offset==d.dom_node.nodeValue.length)){if(this._isEmbeddedObject(d.dom_node.nextSibling)){return{dom_node:d.dom_node.nextSibling,container_spanned:!d.checkForObjects,preventDefault:d.preventDefault}}}}}if(!this._isEmbeddedObject(d.dom_node)){return false}return{dom_node:d.dom_node,container_spanned:!d.checkForObjects,preventDefault:d.preventDefault}},_clickedOnObject:function(d){ddt.log("_clickedOnObject(): got current node : ",d);while(b(d).attr("id")!=this.element.attr("id")){if(this._isEmbeddedObject(d)){ddt.log("_clickedOnObject(): found object node '"+d+"'");return d}d=d.parentNode;ddt.log("_clickedOnObject(): checking parent node : ",d)}ddt.log("_clickedOnObject(): user did not click on an object");return false},deleteObject:function(g){ddt.log("deleteObject(): top with node: ",g);var f=c.getSelection();var e=g.parentNode;var d=this._getObjectRange(g);ddt.log("deleteObject(): range to delete is : ",d);d.deleteContents();d.collapse(true);f.removeAllRanges();f.addRange(d);if((b(e).attr("id")!=this.element.attr("id"))&&(e.childNodes.length==0)){ddt.log("deleteObject(): last element of container deleted. Deleting container.");d.setStartBefore(e);d.setEndAfter(e);d.deleteContents();d.collapse(true);f.removeAllRanges();f.addRange(d)}this._saveRange();return},_moveCaret:function(h,d,g){var f=0;var e={};ddt.log("_moveCaret(): top with direction '"+g+"' with node: ",h);if((e=this._treeWalker(h,d,g))==false){ddt.log("_moveCaret(): _treeWalker returned false");return false}ddt.log("_moveCaret(): _treeWalker() returned location: ",e);if(e.type=="object"){if(g=="left"){this._setCaretPositionRelative(e.dom_node,"after")}else{this._setCaretPositionRelative(e.dom_node,"before")}return e}if(e.type=="container"){ddt.log("_moveCaret(): we were in a container and have stepped out. Selecting '"+g+"' side");if(g=="left"){if((e.dom_node.previousSibling.nodeName=="DIV")||(e.dom_node.previousSibling.nodeName=="P")){if(e.dom_node.previousSibling.childNodes.length==0){ddt.error("_moveCaret(): empty container previousSibling");return false}ddt.log("_moveCaret(): moving into container: '"+e.dom_node.previousSibling+"' from '"+e.dom_node+"'");this._setCaretPositionRelative(e.dom_node.previousSibling,"end");e.dom_node=e.dom_node.previousSibling.childNodes[e.dom_node.previousSibling.childNodes.length-1];return e}if(e.dom_node.previousSibling.nodeType==3){ddt.log("_moveCaret(): previousSibling is a textnode");e.dom_node=e.dom_node.previousSibling;if(e.dom_node.nodeValue.length==0){ddt.error("_moveCaret(): previousSibling is a zero length textnode.");return false}this._setCaretPositionRelative(e.dom_node,"end");return e}e.dom_node=e.dom_node.previousSibling;ddt.log("_moveCaret(): moving before element '"+e.dom_node+"'");this._setCaretPositionRelative(e.dom_node,"before");return e}else{if(e.dom_node.nextSibling==null){ddt.log("_moveCaret(): nextSibling is null in container. setting position 'after' with node:",e.dom_node);this._setCaretPositionRelative(e.dom_node,"after");return e}if((e.dom_node.nextSibling.nodeName=="DIV")||(e.dom_node.nextSibling.nodeName=="P")){if(e.dom_node.nextSibling.childNodes.length==0){ddt.error("_moveCaret(): empty container nextSibling");return false}e.dom_node=e.dom_node.nextSibling.childNodes[0]}this._setCaretPositionRelative(e.dom_node,"after")}return e}if(e.type=="child"){ddt.log("_moveCaret(): handling special stepping into child case");if(e.dom_node.nodeType==3){if(e.dom_node.nodeValue.length==0){ddt.log("_moveCaret(): zero width text node. selecting it.");this._selectTextNode(e.dom_node,0);return e}ddt.log("_moveCaret(): text node child with some content. selecting it");this._selectTextNode(e.dom_node,0);return e}return e}if(e.dom_node.nodeType==3){ddt.log("_moveCaret(): selecting text node for direction '"+g+"' :",e);this._selectTextNode(e.dom_node,e.offset);return e}if(e.dom_node.nodeName=="BR"){ddt.log("_moveCaret(): we have a BR");if(b(e.dom_node).filter("[_moz_dirty]").length!=0){if(g=="left"){ddt.log("_moveCaret(): moving to left side of _moz_dirty BR starting with location:",e);e.type="_moz_dirty";e.preventDefault=true;ddt.log("_moveCaret(): location returned after BR is: ",e);this._setCaretPositionRelative(e.dom_node,"before");return e}else{ddt.log("_moveCaret(): moving to right side of _moz_dirty BR");this._setCaretPositionRelative(e.dom_node,"after");return e}}ddt.log("_moveCaret(): normal BR");if(g=="left"){this._setCaretPositionRelative(e.dom_node,"before")}else{this._setCaretPositionRelative(e.dom_node,"after")}}return e},_backspaceZeroSpace:function(){var i=null;var f=false;var e=0;var l=null;var j={};var k={};var h={};var d=null;var g=null;j=this._getCaretPosition();i=j.dom_node;ddt.log("_backspaceZeroSpace(): current dom node is :",i);if((i.nodeType!=3)&&(i.nodeName!="BR")){ddt.log("_backspaceZeroSpace(): backspacing over a NON-BR '"+i.nodeName+"' node");return false}if(i.nodeName=="BR"){ddt.log("_backspaceZeroSpace(): backspacing over BR");if(b(i).filter("[_moz_dirty]").length!=0){ddt.log("_backspaceZeroSpace(): moz_dirty filthy BR encountered. Stop word");return"stop"}if(i.previousSibling==null){ddt.log("_backspaceZeroSpace(): beginning of container");this._setCaretPositionRelative(i,"before");b(i).remove();return true}if(i.previousSibling.nodeType!=3){ddt.log("_backspaceZeroSpace(): previous element is NOT a textnode :",i.previousSibling);this._setCaretPositionRelative(i,"before");b(i).remove();return true}this._setCaretPositionRelative(i.previousSibling,"end");b(i).remove()}h=this._getCaretPosition();if((k=this._walkTextNode(h.dom_node,h.offset,"left"))==false){ddt.error("_backspaceZeroSpace(): walkTextNode return false");return false}ddt.log("_backspaceZeroSpace(): got start_location: ",k);d=c.getSelection();g=a.createRange();if(k.dom_node.nodeType!=3){g.setStartAfter(k.dom_node)}else{g.setStart(k.dom_node,k.offset)}g.setEnd(h.dom_node,h.offset);g.deleteContents();d.removeAllRanges();d.addRange(g);this._saveRange();return true},_deleteZeroSpace:function(){var i=null;var f=false;var e=0;var l=null;var j={};var k={};var h={};var d=null;var g=null;k=this._getCaretPosition();ddt.log("_deleteZeroSpace(): current dom node is :",k.dom_node);if(k.dom_node.nodeType!=3){ddt.log("_deleteZeroSpace(): deleting NON-TEXT '"+k.dom_node.nodeName+"' node");return false}if((h=this._walkTextNode(k.dom_node,k.offset,"right"))==false){ddt.error("_deleteZeroSpace(): walkTextNode return false");return false}ddt.log("_deleteZeroSpace(): got start and end_location: ",k,h);if((k.dom_node===h.dom_node)&&(k.offset==h.offset)){ddt.log("_deleteZeroSpace(): _walkTextNode() did not move cursor");return false}d=c.getSelection();g=a.createRange();g.setStart(k.dom_node,k.offset);if(h.dom_node.nodeType!=3){ddt.log("_deleteZeroSpace(): setting end of range before dom_node");g.setEndBefore(h.dom_node)}else{ddt.log("_deleteZeroSpace(): setting end of range at offset '"+h.offset+"'");g.setEnd(h.dom_node,h.offset)}g.deleteContents();d.removeAllRanges();d.addRange(g);this._saveRange();return true},_treeWalker:function(i,m,j){var k={type:""};var h=100;var e=false;var g=false;ddt.log("_treeWalker(): top searching '"+j+"' caret_position '"+m+"' current node: ",i);while(i!=null){if(h--<=0){ddt.error("_treeWalker(): runaway loop");return false}if(i.nodeType==3){ddt.log("_treeWalker(): we have a text node with contents '"+i.nodeValue+"' and caret_position '"+m+"'");if((k=this._walkTextNode(i,m,j))==false){ddt.error("_treeWalker(): walkTextNode returned false");return false}ddt.log("_treeWalker(): walkTextNode() returned: ",k);switch(k.type){case"text":ddt.log("_treeWalker(): _walkTextNode() returned a textnode");if(k.dom_node.nodeValue.length>0){ddt.log("_treeWalker(): _walkTextNode() returned a normal text node");k.preventDefault=e;return k}ddt.log("_treeWalker(): _walkTextNode() returned a 0 width text node");if(j=="left"){i=k.dom_node.previousSibling}else{i=k.dom_node.nextSibling}m=-1;continue;break;case"element":case"object":ddt.log("_treeWalker(): _walkTextNode() returned an element or object");i=k.dom_node;m=-1;break;case"container":ddt.log("_treeWalker() _walkTextNode() encountered the end of a container. need to step out.");e=true;g=true;m=-1;i=k.dom_node;break;case"end":ddt.log("_treeWalker(): at end of editable div");return false;break}}if(this._isEmbeddedObject(i)){ddt.log("_treeWalker(): we have found an object node: ",i);var f=true;if(g){f=false}return{dom_node:i,offset:-1,type:"object",preventDefault:e,checkForObjects:f}}if(i.nodeName=="BR"){ddt.log("_treeWalker(): we have a BR");if(b(i).filter("[_moz_dirty]").length!=0){ddt.log("_treeWalker(): we have a _moz_dirty BR. stopping");return{dom_node:i,offset:-1,type:"element",preventDefault:e,checkForObjects:false}}return{dom_node:i,offset:-1,type:"element",preventDefault:e,checkForObjects:false}}if((k.type!="container")&&((i.nodeName=="DIV")||(i.nodeName=="SPAN")||(i.nodeName=="P"))){ddt.log("_treeWalker(): we have found a container of type '"+i.nodeName+"' :",i);e=true;g=true;if(i.childNodes.length==0){ddt.log("_treeWalker(): container with 0 children. adding text node and returning.");var l=this._insertEmptyNode(i,"child");return{dom_node:l,offset:0,type:"child",preventDefault:e,checkForObjects:false}}var d=null;if(j=="left"){ddt.log("_treeWalker(): LEFT: getting child of container at position '"+(i.childNodes.length-1)+"'");d=i.childNodes[i.childNodes.length-1]}else{d=i.childNodes[0]}if((d.nodeType!=3)&&(!this._isEmbeddedObject(d))&&(d.nodeName!="DIV")&&(d.nodeName!="P")&&(d.nodeName!="BR")){ddt.log("_treeWalker(): returning a container that has an element child node '"+d.nodeName+"'");return{dom_node:i,offset:-1,type:"child",preventDefault:e,checkForObjects:false}}if((d.nodeType==3)&&(d.nodeValue.match(/^[\u200B]+$/)!=null)){ddt.log("_treeWalker(): webKit hack. empty DIV with zero width space. Stopping");return{dom_node:d,offset:0,type:"child",preventDefault:e,checkForObjects:false}}ddt.log("_treeWalker(): bottom of loop, container with '"+i.childNodes.length+"' children, child at end of container is:",d);i=d;continue}if(((j=="left")&&(i.previousSibling==null))||((j=="right")&&(i.nextSibling==null))){ddt.log("_treeWalker(): we have come to an end of a container.");if(b(i.parentNode).attr("id")==this.element.attr("id")){ddt.log("_treeWalker(): we have come to the beginning or end of the editable div and not found a stopping point");return false}i=i.parentNode;ddt.log("_treeWalker(): moving up to parent level: ",i)}if(j=="left"){i=i.previousSibling}else{i=i.nextSibling}k.type=""}ddt.error("_treeWalker(): outside of while.");return false},_walkTextNode:function(h,e,g){var i=200;if(h.nodeType!=3){ddt.error("_walkTextNode(): called with a '"+h.nodeName+"' node");return false}if(e==-1){if(g=="left"){e=h.nodeValue.length}else{e=0}}ddt.log("_walkTextNode(): direction '"+g+"' starting with char is '"+h.nodeValue.charAt(e)+"' at position '"+e+"' length '"+h.nodeValue.length+"' parent is :",h.parentNode);switch(g){case"left":var d=false;if(e==0){d=true}while(true){ddt.log("_walkTextNode(): top of left loop, char is '"+h.nodeValue.charAt(e)+"' at position '"+e+"' length '"+h.nodeValue.length+"'");if(i--<=0){ddt.error("_walkTextNode(): runaway loop. braking");return false}if(d){d=false;ddt.log("_walkTextNode(): checking previousSibling");if(h.previousSibling==null){ddt.log("_walkTextNode(): beginning of container found.");if(b(h.parentNode).attr("id")==this.element.attr("id")){ddt.log("_walkTextNode(): end of editable div");return{dom_node:h,offset:0,type:"end",preventDefault:false,checkForObjects:true}}ddt.log("_walkTextNode(): stepping out of a container to parent:",h.parentNode);return{dom_node:h.parentNode,offset:-1,type:"container",preventDefault:false,checkForObjects:true}}if(h.previousSibling.nodeType!=3){ddt.log("_walkTextNode(): previousSibling is NOT a text node:",h.previousSibling);h=h.previousSibling;return{dom_node:h,offset:-1,type:"element",preventDefault:false,checkForObjects:true}}h=h.previousSibling;if((e=h.nodeValue.length)==0){ddt.log("_walkTextNode(): zero length textnode encountered");e=0;d=true;continue}}if(h.nodeValue.charAt(e-1)!="\u200B"){ddt.log("_walkTextNode(): Not a zero width space at position '"+e+"' is a '"+h.nodeValue.charCodeAt(e-1)+"'");return{dom_node:h,offset:e,type:"text",preventDefault:false,checkForObjects:false}}ddt.log("_walkTextNode(): found a zero width space char at offset '"+(e-1)+"'");e--;if(e==0){d=true}}ddt.error("_walkTextNode(): bottom of left loop");return false;break;case"right":while(true){if(i--<=0){ddt.error("_walkTextNode(): runaway loop. braking");return false}if(e==h.nodeValue.length){ddt.log("_walkTextNode(): we are at the end of the string.");if(h.nextSibling==null){ddt.log("_walkTextNode(): end of container found :",h);if(b(h.parentNode).attr("id")==this.element.attr("id")){ddt.log("_walkTextNode(): end of editable div");return{dom_node:h,offset:e,type:"end",preventDefault:false,checkForObjects:false}}ddt.log("_walkTextNode(): stepping out of a container");if(b(h.parentNode).attr("id")==this.element.attr("id")){ddt.log("_walkTextNode(): attempted to step out of editable div.");var f=this._insertEmptyNode(h,"after");return{dom_node:f,offset:0,type:"end",preventDefault:false,checkForObjects:true}}return{dom_node:h.parentNode,offset:-1,type:"container",preventDefault:false,checkForObjects:true}}if(h.nextSibling.nodeType!=3){ddt.log("_walkTextNode(): nextSibling is NOT a text node:",h.nextSibling);h=h.nextSibling;return{dom_node:h,offset:-1,type:"element",preventDefault:false,checkForObjects:true}}ddt.log("_walkTextNode(): moving to nextSibling");h=h.nextSibling;e=0;if(h.nodeValue.length==0){ddt.log("_walkTextNode(): zero length textnode encountered");continue}}if(h.nodeValue.charAt(e)!="\u200B"){ddt.log("_walkTextNode(): Not a zero width space at position '"+e+"'. Found '"+h.nodeValue.charCodeAt(e)+"'");return{dom_node:h,offset:e,type:"text",preventDefault:false,checkForObjects:true}}e++}ddt.error("_walkTextNode(): bottom of right loop :",h);return false}},_highlightObject:function(){var d=false;ddt.log("_highlightObject(): top with this",this);this._unHighlightObjects(this.element);ddt.log("_highlightObject(): checking for prev object");if(d=this._checkForAdjacentObject("left")){ddt.log("_highlightObject(): check for object to left returned:",d);if(!d.container_spanned){b(d.dom_node).addClass("highlight")}}ddt.log("_highlightObject(): checking for next object");if(d=this._checkForAdjacentObject("right")){ddt.log("_highlightObject(): check for object to right returned:",d);if(!d.container_spanned){b(d.dom_node).addClass("highlight")}}},_unHighlightObjects:function(d){var e=this;d.children().each(function(f){if(e._isEmbeddedObject(b(this).get(0))){b(this).removeClass("highlight");return}if(b(this).children().length>0){e._unHighlightObjects(b(this))}})},_selectTextNode:function(e,g){if(e.nodeType!=3){ddt.error("_selectTextNode(): ERROR - node of type '"+e.nodeName+"' received.");return false}ddt.log("_selectTextNode(): setting offset '"+g+"' in text node of length '"+e.nodeValue.length+"'");var f=c.getSelection();var d=a.createRange();d.setStart(e,g);d.setEnd(e,g);d.collapse(true);f.removeAllRanges();f.addRange(d);this._saveRange(d)},_setCaretPositionRelative:function(h,d){var g=c.getSelection();var f=null;ddt.log("_setCaretPositionRelative(): moving '"+d+"' relative to :",h);if(h.previousSibling!=null){ddt.log("_setCaretPositionRelative(): with previousSibling: ",h.previousSibling)}if(this._isEmbeddedObject(h)){ddt.log("_setCaretPositionRelative(): setting caret position '"+d+"' relative to an embedded object. getting object range.");f=this._getObjectRange(h);ddt.log("_setCaretPositionRelative(): got object range: ",f);switch(d){case"before":case"beginning":ddt.log("_setCaretPositionRelative(): collapsing to start of range around object");f.collapse(true);break;case"after":case"end":ddt.log("_setCaretPositionRelative(): collapsing to end of range around object");f.collapse(false);break}g.removeAllRanges();g.addRange(f);this._saveRange();return}f=g.getRangeAt(0);switch(d){case"before":if(h.nodeName=="BR"){ddt.log("_setCaretPositionRelative(): 'before' with a 'BR'");var e=this._insertEmptyNode(h,"before");this._setCaretPositionRelative(e,"end");return}f.setStartBefore(h);f.setEndBefore(h);f.collapse(true);g.removeAllRanges();g.addRange(f);this._saveRange();var i=this._getCaretPosition();break;case"after":if(h.nodeName=="BR"){ddt.log("_setCaretPositionRelative(): 'after' with a 'BR'");f.setStartBefore(h);f.setEndBefore(h);f.collapse(false);g.removeAllRanges();g.addRange(f);this._saveRange();break}f.setStartAfter(h);f.setEndAfter(h);f.collapse(false);g.removeAllRanges();g.addRange(f);this._saveRange();break;case"beginning":if(h.nodeType!=3){ddt.error("_setCaretPositionRelative(): 'beginning not on a text node: ",h);return}f.setStart(h,0);f.setEnd(h,0);f.collapse(false);g.removeAllRanges();g.addRange(f);this._saveRange();break;case"end":if(h.nodeType!=3){ddt.error("_setCaretPositionRelative(): 'end not on a text node: ",h);return}f.setStart(h,h.nodeValue.length);f.setEnd(h,h.nodeValue.length);f.collapse(false);g.removeAllRanges();g.addRange(f);this._saveRange();break}if((f.startContainer.nodeName=="DIV")&&(b(f.startContainer).attr("id")==this.element.attr("id"))&&(f.startOffset==f.startContainer.childNodes.length)){ddt.error("_setCaretPositionRelative(): attempted to break out of div.");var e=this._insertEmptyNode(f.startContainer,"child");this._selectTextNode(e,0)}ddt.log("_setCaretPositionRelative(): result range is: ",f)},_getObjectRange:function(h){ddt.log("_getObjectRange(): top");var g=c.getSelection();var e=g.getRangeAt(0);var f=null;var i=0;if(!g.rangeCount){ddt.error("_getObjectRange(): NO RANGE. UNABLE TO MOVE CARET.");return}ddt.log("_getObjectRange(): getting position 'before' node");if(h.previousSibling==null){ddt.log("_getObjectRange(): BEFORE: No sibling node to the left");var d=this._insertEmptyNode(h,"before");e.setStart(d,0)}else{if(h.previousSibling.nodeType!=3){ddt.log("_getObjectRange(): BEFORE: sibling to the left NOT A TEXT NODE, it's a '"+h.previousSibling.nodeName+"'");var d=this._insertEmptyNode(h,"before");e.setStart(d,0)}else{if(h.previousSibling.nodeValue==null){ddt.log("_getObjectRange(): BEFORE: sibling to the left is an EMPTY/NULL TextNode");var d=this._insertEmptyNode(h,"before");e.setStart(d,0)}else{if(h.previousSibling.nodeValue.length==0){ddt.log("_getObjectRange(): BEFORE: sibling to the left is a 0 length TextNode");var d=this._insertEmptyNode(h,"before");e.setStart(d,0)}else{ddt.log("_getObjectRange(): existing text node. setting range to start before object");e.setStart(h.previousSibling,h.previousSibling.nodeValue.length)}}}}f=a.createRange();if(h.nextSibling==null){ddt.log("_getObjectRange(): AFTER: No sibling node to the right");var d=this._insertEmptyNode(h,"after");e.setEnd(d,1)}else{if(h.nextSibling.nodeType!=3){ddt.log("_getObjectRange(): AFTER: sibling to the right NOT A TEXT NODE, it's a '"+h.nextSibling.nodeName+"'");var d=this._insertEmptyNode(h,"after");e.setEnd(d,1)}else{if(h.nextSibling.nodeValue==null){ddt.log("_getObjectRange(): AFTER: sibling to the right is an EMPTY/NULL TextNode");var d=this._insertEmptyNode(h,"after");e.setEnd(d,1)}else{if(h.nextSibling.nodeValue.length==0){ddt.log("_getObjectRange(): AFTER: sibling to the right is a 0 length TextNode");var d=this._insertEmptyNode(h,"after");e.setEnd(d,1)}else{ddt.log("_getObjectRange(): existing text node.");if(h.nextSibling.nodeValue!="\u200B"){var d=this._insertEmptyNode(h,"after");e.setEnd(d,1)}else{e.setEnd(h.nextSibling,1)}}}}}return e},_getCaretPosition:function(){var h=null;var e=null;var i=null;var g=c.getSelection();try{var d=c.getSelection().getRangeAt(0)}catch(f){ddt.log("_getCaretPosition(): unable to get position "+f);return false}ddt.log("_getCaretPosition(): top");if(d.collapsed==false){ddt.log("_getCaretPosition(): multi-char selection");return false}h=d.startContainer;if(i=this._isEmbeddedObject(h)){ddt.log("_getCaretPosition(): we have an embedded object");return{dom_node:i,offset:-1}}if(h.nodeType==3){return{dom_node:h,offset:d.startOffset}}if((b(h).attr("id")==this.element.attr("id"))||(h.nodeName=="DIV")||(h.nodeName=="P")){ddt.log("_getCaretPosition(): Got a container (DIV/P) as a parent. We are possibly next to a BR or at the end. startOffset is '"+d.startOffset+"'");if(h.childNodes.length==0){ddt.log("_getCaretPosition(): EMPTY CONTAINER! Adding empty text node.");e=this._insertEmptyNode(h,"child");this._selectTextNode(e,0);return{dom_node:e,offset:0}}if(d.startOffset>=h.childNodes.length){ddt.log("_getCaretPosition(): We are at the end of a container which is unselectable in webKit browsers");e=this._insertEmptyNode(h,"after");this._selectTextNode(e,1);return{dom_node:e,offset:1}}h=h.childNodes[d.startOffset];if(h.nodeType==3){ddt.error("_getCaretPosition(): THIS SHOULD NOT HAPPEN. TEXTNODE RETURNED AS CONTAINER OFFSET");this._selectTextNode(h,0);return{dom_node:h,offset:0}}}return{dom_node:h,offset:-1}},_insertSelection:function(d,e){ddt.log("_insertSelection(): deleting trigger word based on trigger: ",d," with currentRange ",this.currentRange);this.replaceWord(d,e.content,e.value);this.selectionEntered=true},replaceWord:function(h,f,e){var g=c.getSelection();var d=a.createRange();ddt.log("replaceWord(): deleting word: ",h);d.setStart(h.startNode,h.startOffset);d.setEnd(h.endNode,h.endOffset+1);d.deleteContents();this._saveRange(d);this.insertObject(f,e)},_insertEmptyNode:function(g,f,e){if(typeof(e)=="undefined"){e=false}var d=document.createTextNode("\u200B");switch(f){case"before":if((!e)&&(g.previousSibling!=null)&&(g.previousSibling.nodeType==3)&&(g.previousSibling.nodeValue.length>0)){ddt.log("_insertEmptyNode(): there's already a text node before this node");return g.previousSibling}b(d).insertBefore(g);break;case"after":if((!e)&&(g.nextSibling!=null)&&(g.nextSibling.nodeType==3)&&(g.nextSibling.nodeValue.length>0)){ddt.log("_insertEmptyNode(): there's already a text node after this node");return g.nextSibling}b(d).insertAfter(g);break;case"child":if((g.childNodes.length!=0)&&(g.childNodes[g.childNodes.length-1].nodeType==3)){ddt.log("_insertEmptyNode(): there's already a text node at the end of this container.");return g.childNodes[g.childNodes.length-1]}b(d).appendTo(g);break;default:ddt.error("_insertEmptyNode(): Invalid direction supplied '"+f+"'");break}return d},_checkSibling:function(g,f){var e=null;ddt.log("_checkSibling(): dom_node is :",g);if(f=="prev"){e=g.previousSibling}else{e=g.nextSibling}ddt.log("_checkSibling(): sibling is :",e);if(e==null){ddt.log("_checkSibling(): sibling is null.");return}if(this._isEmbeddedObject(e)){ddt.log("_checkSibling(): object sibling");this._insertEmptyNode(e,"before");this._insertEmptyNode(e,"after");return}if(e.nodeName=="BR"){ddt.log("_checkSibling(): sibling is a BR");this._insertEmptyNode(e,"before");this._insertEmptyNode(e,"after");return}if((e.nodeName!="SPAN")&&(e.nodeName!="DIV")&&(e.nodeName!="P")){ddt.log("_checkSibling(): sibling is not a container: '"+e.nodeName+"'");return}if(e.childNodes.length==0){ddt.log("_checkSibling(): empty container. adding textnode");this._insertEmptyNode(e,"child");return}if((e.childNodes.length==1)&&(e.childNodes[0].nodeName=="BR")){ddt.log("_checkSibling(): DIV containing just a BR found. Adding a zero width char.");var d=e.childNodes[0];this._insertEmptyNode(d,"before");b(d).remove();return}this._insertEmptyNode(e.childNodes[0],"before");this._insertEmptyNode(e.childNodes[e.childNodes.length-1],"after");return},_isEmbeddedObject:function(d){var e=null;if(d==null){ddt.log("_isEmbeddedObject(): NULL node passsed in");return false}if(b(d).attr("data-value")!=null){return d}return b(d).parents("[data-value]").get(0)},insertObject:function(g,k){ddt.log("insertObject(): top with content '"+g+"' and value '"+k+"'");this.element.focus();ddt.log("insertObject(): after focus - currentRange is ",this.currentRange);if(this.currentRange===false){ddt.log("insertObject(): currentRange is false");var l=this._insertEmptyNode(this.element.get(0),"child");this._selectTextNode(l,1)}var d=c.getSelection();var f=this.currentRange;d.removeAllRanges();d.addRange(f);var i=null;var e=document.createElement("div");e.innerHTML=g.replace(/^[\s\u200B]+|[\s\u200B]+$/g,"");node=b(e).contents();ddt.log("insertObject(): node is ",node);node.attr("data-value",k);var j=node.get(0);f.insertNode(node.get(0));f.setStartAfter(node.get(0));f.collapse(true);d.removeAllRanges();d.addRange(f);ddt.log("insertObject(): previousSibling is : ",j.previousSibling);ddt.log("insertObject(): inserting zero width node before selection");var l=this._insertEmptyNode(j,"before",true);ddt.log("insertObject(): inserting zero width node after selection");var h=this._insertEmptyNode(j,"after",true);this._selectTextNode(h,1)},getTextContent:function(){ddt.log("getTextContent(): top");var d=this._getTextWithLineBreaks(this.element.get(0).childNodes);ddt.log("getTextcontent(): content length before replace is: '"+d.length+"'");d=d.replace(/[\u200B]/gm,"");if(d.match(/[\u200B]/)!=null){ddt.error("getTextContent(): zero width chars in content")}ddt.log("getTextcontent(): content length after replace is: '"+d.length+"'");return d},_getTextWithLineBreaks:function(e){var d=["BR","DIV","P"];var h="";var g;ddt.log("elems ",e);for(var f=0;e[f];f++){g=e[f];ddt.log("elem is '"+g.nodeName+"'");if(this._isEmbeddedObject(g)){ddt.log("embedded object found");h+="[o="+b(g).attr("data-value")+"]";continue}if((g.nodeType==3)||(g.nodeType==4)){ddt.log("text or cdata found");h+=g.nodeValue.replace(/[\n]/gm,"")}else{if(jQuery.inArray(g.nodeName,d)!=-1){ddt.log("break_tag found, adding newline");h+="\n"}else{ddt.log("other")}}if(g.nodeType!==8){h+=this._getTextWithLineBreaks(g.childNodes)}}return h},clear:function(){this.element.empty()},focus:function(){var e=c.getSelection();var d=a.createRange();d.setStart(this.element.get(0),0);this.element.focus()}})})(jQuery);
function setup_rich_textarea(){$("#RICH_TEXTAREA").rich_textarea({triggers:[{trigger:"@",callback:function(c,a){console.log("@ callback"+c);var b=[{label:"Calico Jack Rackham",value:{value:"1",content:'<span class="nombre"><a href="/perfil-usuario.php">Calico Jack Rackham</a></span>'}},{label:"Edward England",value:{value:"2",content:'<span class="nombre"><a href="/perfil-usuario.php">Edward England</a></span>'}},{label:"Blackbeard Edward Teach",value:{value:"3",content:'<span class="nombre"><a href="/perfil-usuario.php">BlackBeard (Edward Teach)</a></span>'}},{label:"Bartholomew Roberts",value:{value:"4",content:'<span class="nombre"><a href="/perfil-usuario.php">Bartholomew Roberts</a></span>'}}];a($.ui.autocomplete.filter(b,c))}}],regexes:[{regex:/^((http|https):\/\/([\-\w]+\.)+\w{2,5}(\/[%\-\w]+(\.\w{2,})?)*(([\w\-\.\?\\/+@&#;`~=%!]*)(\.\w{2,})?)*\/?)$/i,callback:function(a){console.log("regex: got word entry:",a);$("#RICH_TEXTAREA").rich_textarea("replaceWord",a,'<span><a href="'+a.word+'">'+a.word+"</a>",a.word)}}]})};